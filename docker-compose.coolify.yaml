services:
  api:
    container_name: API_SQL_SANDBOX
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
       - ${API_PORT:-3002}:3001
    environment:
      - API_PORT=${API_PORT:-3002}
      - NODE_ENV=production
      - PORT=3001
    command: "node server.js"  # Ensure server binds to 0.0.0.0
    volumes:
      - type: bind
        source: ./apps/api/user_dbs
        target: /app/user_dbs
        is_directory: true
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://api:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
  web:
    container_name: WEB_SQL_SANDBOX
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL}
        RESEND_API_KEY: ${RESEND_API_KEY}
    restart: unless-stopped
    ports:
      - ${WEB_PORT:-3001}:3000
    environment:
      - WEB_PORT=${WEB_PORT:-3001}
      - NODE_ENV=production
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://web:3000']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s